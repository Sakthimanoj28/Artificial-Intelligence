def is_safe(node, color, assignment, graph):
    for neighbor in graph[node]:
        if neighbor in assignment and assignment[neighbor] == color:
            return False
    return True

def map_coloring(graph, colors, assignment={}, node_list=None):
    if node_list is None:
        node_list = list(graph.keys())
    
    if len(assignment) == len(graph):
        return assignment

    node = node_list[0]
    for color in colors:
        if is_safe(node, color, assignment, graph):
            assignment[node] = color
            result = map_coloring(graph, colors, assignment, node_list[1:])
            if result:
                return result
            del assignment[node]

    return None

# Example Map
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'C', 'D'],
    'C': ['A', 'B', 'D'],
    'D': ['B', 'C']
}
colors = ['Red', 'Green', 'Blue']

result = map_coloring(graph, colors)
print("\nMap Coloring Solution:", result)
