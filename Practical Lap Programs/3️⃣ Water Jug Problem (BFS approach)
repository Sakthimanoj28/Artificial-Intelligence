from collections import deque

def water_jug(capacity1, capacity2, target):
    visited = set()
    q = deque()
    q.append((0,0))

    while q:
        a,b = q.popleft()
        if (a,b) in visited:
            continue
        visited.add((a,b))
        print(f"Jug1: {a}, Jug2: {b}")

        if a==target or b==target:
            return True

        q.extend([
            (capacity1, b), (a, capacity2), (0, b), (a, 0),
            (min(a+b, capacity1), 0) if a+b >= capacity1 else (0, a+b),
            (0, a+b) if a+b <= capacity2 else (a+b-capacity2, capacity2)
        ])
    return False

water_jug(4,3,2)
